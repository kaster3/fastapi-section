[tool.poetry]
name = "BaseFastAPI"
version = "0.1.0"
description = ""
authors = ["Fedorov Semen <FedorovSemen28@yandex.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
pydantic = {extras = ["email"], version = "^2.9.2"}
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic-settings = "^2.5.2"
sqlalchemy = "^2.0.35"
asyncpg = "^0.29.0"
alembic = "^1.13.3"
orjson = "^3.10.7"
black = "^24.10.0"
gunicorn = "^23.0.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
pre-commit = "^4.0.1"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
addopts = "-v"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pre-commit]
repos = [
  { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.6.0", hooks = [
      { id = "trailing-whitespace" },
      { id = "check-yaml" },
      { id = "check-case-conflict" },
      { id = "check-merge-conflict" }
    ] },
  { repo = "https://github.com/psf/black", rev = "24.8.0", hooks = [
      { id = "black", name = "Black", language_version = "python3.12", files = "\\.pyi?$", exclude = "migrations/.*", args = [
        "--line-length=100",
        "--target-version=py310",
        "--target-version=py311",
        "--target-version=py312"
      ] }
    ] },
  { repo = "https://github.com/pycqa/isort", rev = "5.13.2", hooks = [
      { id = "isort", name = "Isort", language_version = "python3.12.3", additional_dependencies = ["colorama"], args = [
        "--profile=black",
        "--line-length=90"
      ] }
    ] },
  { repo = "https://github.com/pycqa/flake8", rev = "7.1.0", hooks = [
      { id = "flake8", name = "Flake8", language_version = "python3.12", exclude = "migrations|.git|__pycache__|__init__.py|.env|.env.example", args = [
        "--max-line-length=100",
        "--ignore=F821,E704,W503"
      ] }
    ] }
]

